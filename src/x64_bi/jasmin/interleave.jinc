// ----------------------------------------------------------------------------
// Jasmin implementation of the interleaving functions.
// 
// Note:
// - Implemented based on the reference implementation for bit interleaved arm7vm!
//
// Sources:
// - Ascon reference implementation (GitHub)
//   https://github.com/ascon/ascon-c
// ----------------------------------------------------------------------------


param int B0 = 0x22222222;
param int B1 = 0x0c0c0c0c;
param int B2 = 0x00f000f0;
param int B3 = 0xff00;

inline
fn deinterleave16(reg u32 x) -> reg u32 {
  reg u32 _t0, _t1;
  _t0 = x; _t1 = x; _t1 >>= 1; _t0 ^= _t1; _t0 &= B0; _t1 = _t0; _t1 <<= 1; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 2; _t0 ^= _t1; _t0 &= B1; _t1 = _t0; _t1 <<= 2; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 4; _t0 ^= _t1; _t0 &= B2; _t1 = _t0; _t1 <<= 4; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 8; _t0 ^= _t1; _t0 &= B3; _t1 = _t0; _t1 <<= 8; _t0 ^= _t1; x ^= _t0;
  return x;
}

inline
fn interleave16(reg u32 x) -> reg u32 {
  reg u32 _t0, _t1;
  _t0 = x; _t1 = x; _t1 >>= 8; _t0 ^= _t1; _t0 &= B3; _t1 = _t0; _t1 <<= 8; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 4; _t0 ^= _t1; _t0 &= B2; _t1 = _t0; _t1 <<= 4; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 2; _t0 ^= _t1; _t0 &= B1; _t1 = _t0; _t1 <<= 2; _t0 ^= _t1; x ^= _t0;
  _t0 = x; _t1 = x; _t1 >>= 1; _t0 ^= _t1; _t0 &= B0; _t1 = _t0; _t1 <<= 1; _t0 ^= _t1; x ^= _t0;
  return x;
}

inline
fn deinterleave32(reg u32 hi lo) -> reg u32, reg u32 {
    reg u32 t0, t1;

    lo = deinterleave16(lo);
    hi = deinterleave16(hi);

    t0 = lo;
    t0 &= 0x0000FFFF;
    t1 = hi;
    t1 &= 0xFFFF0000;
    lo >>= 16;
    hi <<= 16;
    lo |= t1; 
    hi |= t0; 

    return hi, lo;
}

inline
fn interleave32(reg u32 e o) -> reg u32, reg u32 {
    reg u32 t0, t1;

    t0 = e;
    t0 &= 0x0000FFFF;
    t1 = o;
    t1 &= 0xFFFF0000;
    e >>= 16;
    o <<= 16;
    e |= t1; 
    o |= t0; 

    e = interleave16(e);
    o = interleave16(o);

    return e, o;
}

